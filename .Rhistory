hist(tabl$col1)
plot(tabl$col1, tabl$col2)
View(ChickWeight)
age <- rnorm(1000, 40, 5)
weight <- rnorm(1000, 55, 10)
height <- rnorm(1000, 5.7, 2.4)
tabl2 <- data.frame(age,weight,height)
View(tabl2)
print(tabl2)
mean(tabl2$age)
summary(tabl2$age)
age <- rnorm(1000, 40, 5)
weight <- rnorm(1000, 55, 10)
height <- rnorm(1000, 5.7, 2.4)
tabl2 <- data.frame(age,weight,height)
View(tabl2)
age <- rnorm(1000, 40, 5)
weight <- rnorm(1000, 55, 10)
height <- rnorm(1000, 5.7, 2.4)
tabl2 <- data.frame(age,weight,height)
View(tabl2)
set.seed(10)
age <- rnorm(1000, 40, 5)
weight <- rnorm(1000, 55, 10)
height <- rnorm(1000, 5.7, 2.4)
tabl2 <- data.frame(age,weight,height)
View(tabl2)
age <- rnorm(1000, 40, 5)
weight <- rnorm(1000, 55, 10)
height <- rnorm(1000, 5.7, 2.4)
tabl2 <- data.frame(age,weight,height)
View(tabl2)
set.seed(10)
age <- rnorm(1000, 40, 5)
set.seed(11)
weight <- rnorm(1000, 55, 10)
set.seed(12)
height <- rnorm(1000, 5.7, 2.4)
tabl2 <- data.frame(age,weight,height)
View(tabl2)
age <- rnorm(1000, 40, 5)
weight <- rnorm(1000, 55, 10)
height <- rnorm(1000, 5.7, 2.4)
tabl2 <- data.frame(age,weight,height)
View(tabl2)
set.seed(10)
age <- rnorm(1000, 40, 5)
print(age)
age <- rnorm(1000, 40, 5)
print(age)
set.seed(10)
age <- rnorm(20, 40, 5)
print(age)
age <- rnorm(20, 40, 5)
print(age)
set.seed(10)
age <- rnorm(20, 40, 5)
print(age)
set.seed(10)
age <- rnorm(20, 40, 5)
print(age)
set.seed(10)
age <- rnorm(20, 40, 5)
weight <- rnorm(20, 55, 10)
height <- rnorm(20, 5.7, 2.4)
tabl2 <- data.frame(age,weight,height)
View(tabl2)
set.seed(10)
age <- rnorm(20, 40, 5)
weight <- rnorm(20, 55, 10)
height <- rnorm(20, 5.7, 2.4)
tabl2 <- data.frame(age,weight,height)
View(tabl2)
mat <- matrix(1:20, 4, 10)
mat
?matrix
my_matrix <- matrix(c(1:20), nrow=2, ncol=2)
my_matrix <- matrix(c(1:20), nrow=4, ncol=5)
my_matrix
View(my_matrix)
my_matrix <- matrix(c(1:5), nrow=4, ncol=5)
my_matrix
my_matrix <- matrix(1:5, nrow=4, ncol=5)
my_matrix
nrow(my_matrix)
ncol(my_)
ncol(my_matrix)
names(my_matrix) <- c("col1", "col2")
View(my_matrix)
my_matrix
?names
?names
?colnames
?names
?colnames
colnames(my_matrix) <- c("a", "b", "c", "d", "e")
View(my_matrix)
my_matrix$a
my_matrix[1,2]
my_matrix[1-2]
my_matrix[c(1:2)]
my_matrix[c(1:2), c(1,2)]
my_matrix[c(1:2), c(1:2)]
my_matrix[c(1:), c(1:2)]
my_matrix[c(1,), c(1:2)]
my_matrix[c(1:5), c(1:2)]
my_matrix[c(1:4), c(1:2)]
View(my_matrix[c(1:4), c(1:2)])
my_matrix <- rbind(my_matrix, c(20,30,45,50,100))
my_matrix
my_matrix[5,5] <- NA
my_matrix
print(my_matrix[,5])
print(my_matrix[e])
print(my_matrix$e)
test_df <- data.frame(my_matrix)
print(test_df$e)
my_mean <- mean(my_matrix[,5])
my_mean
?mean
my_mean <- mean(my_matrix[,5], na.rm=TRUE)
my_mean
# check if data contains NA or na
is.na(test$e)
# check if data contains NA or na
is.na(test_df$e)
length(is.na(test_df$e))
for (i in test_df$e) {
print(i)
}
for (i in nrow(my_matrix)) {
for (j in ncol(my_matrix)){
print(my_matrix[i,j] == NA)
}
}
my_matrix
# replace NA
for (i in nrow(my_matrix)) {
for (j in ncol(my_matrix)){
if (is.na(my_matrix[i,j])){
my_matrix[i,j] = my_mean
}
}
}
my_matrix
# assuming that the provided data contains gaps or empty spaces, it is possible/advised to replace them with the mean
my_matrix[5,5] <- NA
my_matrix
replace_na(my_matrix)
replace_na <- function (mtx) {
for (i in nrow(mtx)) {
for (j in ncol(mtx)){
# calculate the mean
mtx_mean <- mean(mtx[,j], na.rm=TRUE)
if (is.na(mtx[i,j])){
mtx[i,j] = mtx_mean
}
}
}
}
replace_na(my_matrix)
print(my_matrix)
replace_na <- function (mtx) {
for (i in nrow(mtx)) {
for (j in ncol(mtx)){
# calculate the mean
mtx_mean <- mean(mtx[,j], na.rm=TRUE)
print(mtx_mean)
if (is.na(mtx[i,j])){
mtx[i,j] = mtx_mean
}
}
}
}
replace_na(my_matrix)
print(my_matrix)
replace_na <- function (mtx) {
for (i in nrow(mtx)) {
for (j in ncol(mtx)){
# calculate the mean
mtx_mean <- mean(mtx[,j], na.rm=TRUE)
print(mtx_mean)
if (is.na(mtx[i,j])){
print("running")
mtx[i,j] = mtx_mean
}
}
}
}
replace_na(my_matrix)
replace_na <- function (mtx) {
for (i in nrow(mtx)) {
for (j in ncol(mtx)){
# calculate the mean
mtx_mean <- mean(mtx[,j], na.rm=TRUE)
print(mtx_mean)
if (is.na(mtx[i,j])){
print("running")
mtx[i,j] <- mtx_mean
}
}
}
}
replace_na(my_matrix)
print(my_matrix)
replace_na <- function (mtx) {
for (i in nrow(mtx)) {
for (j in ncol(mtx)){
# calculate the mean
mtx_mean <- mean(mtx[,j], na.rm=TRUE)
print(mtx_mean)
if (is.na(mtx[i,j])){
print("running")
mtx[i,j] <<- mtx_mean
}
}
}
}
replace_na(my_matrix)
replace_na <- function (mtx) {
for (i in nrow(mtx)) {
for (j in ncol(mtx)){
# calculate the mean
mtx_mean <- mean(mtx[,j], na.rm=TRUE)
print(mtx_mean)
if (is.na(mtx[i,j])){
print("running")
mtx[i,j] <<- mtx_mean
}
}
}
}
replace_na(my_matrix)
?function
?function
replace_na <- function (mtx) {
for (i in nrow(mtx)) {
for (j in ncol(mtx)){
# calculate the mean
mtx_mean <- mean(mtx[,j], na.rm=TRUE)
print(mtx_mean)
if (is.na(mtx[i,j])){
print("running")
mtx[i,j] <- mtx_mean
}
}
}
return(mtx)
}
replace_na(my_matrix)
my_matrix
my_matrix <- replace_na(my_matrix)
my_matrix
getwd()
setwd("/Users/aaeon/Desktop/Okanome_and_Femi")
df_comp <- read.csv("test_data.csv", headers=TRUE)
df_comp <- read.csv("test_data.csv", headers=TRUE, sep=",")
df_comp <- read.csv("test_data.csv", headers=TRUE, sep=",")
df_comp <- read.csv("test_data.csv", header=TRUE, sep=",")
View(df_comp)
print(df_comp)
sum(is.na(df_comp))
df_comp <- read.csv("test_data.csv", header=TRUE, sep=",")
View(df_comp)
setwd("/Users/aaeon/Desktop/Okanome_and_Femi")
df_comp <- read.csv("test_data.csv", header=TRUE, sep=",")
View(df_comp)
sum(is.na(df_comp))
?str
?grepl
?str_replace
?str_replace
for (i in df_comp$TotalFunding) {
gsub("M", "", i)
}
View(df_comp)
for (i in df_comp$TotalFunding) {
gsub("M", "", i)
print (i)
}
for (i in df_comp$TotalFunding) {
i <- gsub("M", "", i)
print(i)
}
View(df_comp)
#first replace Ms and Bs
?vector
temp_col = vector("character", length(df_comp$TotalFunding))
for (i in df_comp$TotalFunding) {
i <- gsub("M", "", i)
append(temp_col, i)
}
df_comp$TotalFunding <- temp_col
View(df_comp)
temp_col = vector("character")
for (i in df_comp$TotalFunding) {
i <- gsub("M", "", i)
append(temp_col, i)
}
print(temp_col)
df_comp$TotalFunding <- temp_col
df_comp <- read.csv("test_data.csv", header=TRUE, sep=",")
temp_col = vector("character")
for (i in df_comp$TotalFunding) {
i <- gsub("M", "", i)
append(temp_col, i)
}
print(temp_col)
df_comp$TotalFunding <- temp_col
temp_col = vector("character", 0)
for (i in df_comp$TotalFunding) {
i <- gsub("M", "", i)
append(temp_col, i)
}
print(temp_col)
df_comp$TotalFunding <- temp_col
temp_col = c()
df_comp <- read.csv("test_data.csv", header=TRUE, sep=",")
temp_col = c()
for (i in df_comp$TotalFunding) {
i <- gsub("M", "", i)
append(temp_col, i)
}
print(temp_col)
df_comp$TotalFunding <- temp_col
View(df_comp)
print(temp_col)
df_comp <- read.csv("test_data.csv", header=TRUE, sep=",")
?grepl
for (i in df_comp$TotalFunding) {
df_comp$TotalFunding[match(i, df_comp$TotalFunding)] <- gsub("M", "", i)
}
View(df_comp)
for (i in df_comp$TotalFunding) {
df_comp$TotalFunding[match(i, df_comp$TotalFunding)] <- gsub("B", "", i)
}
View(df_comp)
for (i in df_comp$Valuation) {
df_comp$TotalFunding[match(i, df_comp$TotalFunding)] <- gsub("B", "", i)
}
View(df_comp)
df_comp <- read.csv("test_data.csv", header=TRUE, sep=",")
View(df_comp)
for (i in df_comp$Valuation) {
df_comp$Valuation[match(i, df_comp$TotalFunding)] <- gsub("B", "", i)
}
View(df_comp)
df_comp <- read.csv("test_data.csv", header=TRUE, sep=",")
for (i in df_comp$Valuation) {
df_comp$Valuation[match(i, df_comp$Valuation)] <- gsub("B", "", i)
}
View(df_comp)
# replace Ms for total funding
for (i in df_comp$TotalFunding) {
df_comp$TotalFunding[match(i, df_comp$TotalFunding)] <- gsub("M", "", i)
}
# replace Bs for total funding
for (i in df_comp$TotalFunding) {
df_comp$TotalFunding[match(i, df_comp$TotalFunding)] <- gsub("B", "", i)
}
View(df_comp)
# replace Ms for  ARR
for (i in df_comp$ARR) {
df_comp$ARR[match(i, df_comp$ARR)] <- gsub("M", "", i)
}
# replace Bs for  ARR
for (i in df_comp$ARR) {
df_comp$ARR[match(i, df_comp$ARR)] <- gsub("B", "", i)
}
View(df_comp)
?typeof
typeof("x")
typeof(1)
typeof(1.3)
typeof(1.3984398489)
?cast
numeric("3")
as.numeric("3")
mean(df_comp$TotalFunding)
temp <- vector("numeric", 0)
for (i in df_comp$TotalFunding) {
temp.append(as.numeric(i))# get the value
}
temp_vect <- vector("numeric", 0)
print(temp_vect)
temp_vect <- vector("numeric", 0)
length(temp_vect)
temp_vect <- vector("numeric", 0)
length(temp_vect)
for (i in df_comp$TotalFunding) {
temp_vect.append(as.numeric(i))# get the value
}
temp_vect <- vector("numeric", 0)
length(temp_vect)
for (i in df_comp$TotalFunding) {
append(temp_vect,as.numeric(i))# get the value
}
mean(temp_vect)
temp_vect <- vector("numeric", 0)
length(temp_vect)
for (i in df_comp$TotalFunding) {
append(temp_vect,as.numeric(i))# get the value
}
mean(temp_vect, na.rm = TRUE)
sum(is.nan(temp_vect))
print(temp_vect)
temp_vect <- c()
length(temp_vect)
for (i in df_comp$TotalFunding) {
append(temp_vect,as.numeric(i))# get the value
}
print(temp_vect)
for (i in df_comp$TotalFunding) {
typeof(as.numeric(i))
}
for (i in df_comp$TotalFunding) {
df_comp$TotalFunding[match(i, df_comp$TotalFunding)] <- gsub("K", "", i)
}
View(df_comp)
for (i in df_comp$TotalFunding) {
df_comp$TotalFunding[match(i, df_comp$TotalFunding)] <- gsub("NA", "0", i)
}
View(df_comp)
for (i in df_comp$TotalFunding) {
df_comp$TotalFunding[match(i, df_comp$TotalFunding)] <- gsub("NA", "0", i)
}
View(df_comp)
sum(is.na(df_comp$TotalFunding))
for (i in df_comp$TotalFunding) {
df_comp$TotalFunding[which(df_comp$TotalFunding, is.na(i))] <- "0"
}
?which
for (i in df_comp$TotalFunding) {
?which
df_comp$TotalFunding[which(is.na(i))] <- "0"
}
View(df_comp)
df_comp$TotalFunding[which(is.na(df_comp$TotalFunding))] <- "0"
View(df_comp)
for (i in df_comp$TotalFunding) {
typeof(as.numeric(i))
}
for (i in df_comp$TotalFunding) {
i <- typeof(as.numeric(i))
}
print(temp_vect)
for (i in df_comp$TotalFunding) {
i <- typeof(as.numeric(i))
typeof(i)
}
for (i in df_comp$TotalFunding) {
i <- typeof(as.numeric(i))
print(typeof(i))
}
for (i in df_comp$TotalFunding) {
df_comp$TotalFunding[match(i, df_comp$TotalFunding)] <- typeof(as.numeric(i))
}
mean(df_comp$TotalFunding, na.rm = TRUE)
print(df_comp$TotalFunding)
df_comp <- read.csv("test_data.csv", header=TRUE, sep=",")
# replace Ms for total funding
for (i in df_comp$TotalFunding) {
df_comp$TotalFunding[match(i, df_comp$TotalFunding)] <- gsub("M", "", i)
}
# replace Bs for total funding
for (i in df_comp$TotalFunding) {
df_comp$TotalFunding[match(i, df_comp$TotalFunding)] <- gsub("B", "", i)
}
# replace Ks for total funding
for (i in df_comp$TotalFunding) {
df_comp$TotalFunding[match(i, df_comp$TotalFunding)] <- gsub("K", "", i)
}
# replace NAs for  total funding with 0
df_comp$TotalFunding[which(is.na(df_comp$TotalFunding))] <- "0"
View(df_comp)
for (i in df_comp$TotalFunding) {
df_comp$TotalFunding[match(i, df_comp$TotalFunding)] <- as.numeric(i)
}
print(df_comp$TotalFunding)
mean(df_comp$TotalFunding, na.rm = TRUE)
print(df_comp$TotalFunding)
print(df_comp$TotalFunding)
for (i in df_comp$TotalFunding) {
df_comp$TotalFunding[match(i, df_comp$TotalFunding)] <- numeric(i)
}
mean(as.numeric(df_comp$TotalFunding), na.rm = TRUE)
summary(df_comp$TotalFunding)
summary(as.numeric(df_comp$TotalFunding))
sd(as.numeric(df_comp$TotalFunding))
hist(as.numeric(df_comp$TotalFunding))
hist(as.numeric(df_comp$TotalFunding), xlab="total funding", ylab = "occurrence")
?hist
hist(as.numeric(df_comp$TotalFunding), xlab="total funding", ylab = "occurrence", main="okanome")
hist(as.numeric(df_comp$TotalFunding), xlab="total funding", ylab = "occurrence", main="Okanome")
sum(is.na(df_comp))
# check the type of the data values
is.character(df_comp$TotalFunding)
# check the type of the data values
is.double(df_comp$TotalFunding)
as.numeric("faith")
as.numeric("10")
for (i in df_comp$Valuation) {
df_comp$Valuation[match(i, df_comp$Valuation)] <- gsub("B", "", i)
}
View(df_comp)
df_comp <- read.csv("test_data.csv", header=TRUE, sep=",")
for (i in df_comp$Valuation) {
df_comp$Valuation[match(i, df_comp$Valuation)] <- gsub("(Cisco)", "", i)
}
View(df_comp)
/Users/aaeon/Desktop/Okanome_and_Femi
/Users/aaeon/Desktop/Okanome_and_Femi
